/*
 * Object Storage
 * REST API OpenAPI documentation for the Object Storage
 *
 * The version of the OpenAPI document: 1.0.0 (v1)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BucketCreate;
import java.io.File;
import org.openapitools.client.model.PaginatedBucketList;
import org.openapitools.client.model.PaginatedBucketObjectList;
import org.openapitools.client.model.ResponseBucket;
import org.openapitools.client.model.SuccessBucketOperation;
import org.openapitools.client.model.SuccessObjectOperation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StorageApi
 */
@Disabled
public class StorageApiTest {

    private final StorageApi api = new StorageApi();

    /**
     * Create a new bucket
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageApiBucketsCreateTest() throws ApiException {
        BucketCreate bucketCreate = null;
        ResponseBucket response = api.storageApiBucketsCreate(bucketCreate);
        // TODO: test validations
    }

    /**
     * Delete a bucket
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageApiBucketsDestroyTest() throws ApiException {
        String name = null;
        SuccessBucketOperation response = api.storageApiBucketsDestroy(name);
        // TODO: test validations
    }

    /**
     * List buckets
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageApiBucketsListTest() throws ApiException {
        Integer page = null;
        Integer pageSize = null;
        PaginatedBucketList response = api.storageApiBucketsList(page, pageSize);
        // TODO: test validations
    }

    /**
     * Create new object key
     *
     * Create a new object key in the bucket.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageApiBucketsObjectsCreateTest() throws ApiException {
        String bucketName = null;
        String objectKey = null;
        Map<String, Object> requestBody = null;
        SuccessObjectOperation response = api.storageApiBucketsObjectsCreate(bucketName, objectKey, requestBody);
        // TODO: test validations
    }

    /**
     * Delete object key
     *
     * Delete an object key from bucket
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageApiBucketsObjectsDestroyTest() throws ApiException {
        String bucketName = null;
        String objectKey = null;
        SuccessObjectOperation response = api.storageApiBucketsObjectsDestroy(bucketName, objectKey);
        // TODO: test validations
    }

    /**
     * List buckets objects
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageApiBucketsObjectsListTest() throws ApiException {
        String bucketName = null;
        Integer page = null;
        Integer pageSize = null;
        PaginatedBucketObjectList response = api.storageApiBucketsObjectsList(bucketName, page, pageSize);
        // TODO: test validations
    }

    /**
     * Download object
     *
     * Download the object key from bucket.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageApiBucketsObjectsRetrieveTest() throws ApiException {
        String bucketName = null;
        String objectKey = null;
        File response = api.storageApiBucketsObjectsRetrieve(bucketName, objectKey);
        // TODO: test validations
    }

    /**
     * Update the object key
     *
     * Update the object key from bucket.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageApiBucketsObjectsUpdateTest() throws ApiException {
        String bucketName = null;
        String objectKey = null;
        Map<String, Object> requestBody = null;
        SuccessObjectOperation response = api.storageApiBucketsObjectsUpdate(bucketName, objectKey, requestBody);
        // TODO: test validations
    }

    /**
     * Update bucket info
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storageApiBucketsPartialUpdateTest() throws ApiException {
        String name = null;
        ResponseBucket response = api.storageApiBucketsPartialUpdate(name);
        // TODO: test validations
    }

}
