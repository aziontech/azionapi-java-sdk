/*
 * Data Streaming - OpenAPI
 * The Data Streaming API allows you to manage your existing data streamings and templates. Data Streaming allows you to feed your stream processing, SIEM, and big data platforms with the event logs from your applications on Azion in real time. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.EndpoinrtS3;
import org.openapitools.client.model.EndpointAWSKinesisFirehose;
import org.openapitools.client.model.EndpointAzureBlobStorage;
import org.openapitools.client.model.EndpointAzureMonitor;
import org.openapitools.client.model.EndpointDatadog;
import org.openapitools.client.model.EndpointDefault;
import org.openapitools.client.model.EndpointElasticsearch;
import org.openapitools.client.model.EndpointGoogleBigQuery;
import org.openapitools.client.model.EndpointGoogleBigQueryServiceAccountKey;
import org.openapitools.client.model.EndpointIBMQRadar;
import org.openapitools.client.model.EndpointKafka;
import org.openapitools.client.model.EndpointSplunk;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for PostDataStreamingResponseEndpointInner
 */
public class PostDataStreamingResponseEndpointInnerTest {
    private final PostDataStreamingResponseEndpointInner model = new PostDataStreamingResponseEndpointInner();

    /**
     * Model tests for PostDataStreamingResponseEndpointInner
     */
    @Test
    public void testPostDataStreamingResponseEndpointInner() {
        // TODO: test PostDataStreamingResponseEndpointInner
    }

    /**
     * Test the property 'endpointType'
     */
    @Test
    public void endpointTypeTest() {
        // TODO: test endpointType
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'logLineSeparator'
     */
    @Test
    public void logLineSeparatorTest() {
        // TODO: test logLineSeparator
    }

    /**
     * Test the property 'payloadFormat'
     */
    @Test
    public void payloadFormatTest() {
        // TODO: test payloadFormat
    }

    /**
     * Test the property 'maxSize'
     */
    @Test
    public void maxSizeTest() {
        // TODO: test maxSize
    }

    /**
     * Test the property 'headers'
     */
    @Test
    public void headersTest() {
        // TODO: test headers
    }

    /**
     * Test the property 'kafkaTopic'
     */
    @Test
    public void kafkaTopicTest() {
        // TODO: test kafkaTopic
    }

    /**
     * Test the property 'bootstrapServers'
     */
    @Test
    public void bootstrapServersTest() {
        // TODO: test bootstrapServers
    }

    /**
     * Test the property 'useTls'
     */
    @Test
    public void useTlsTest() {
        // TODO: test useTls
    }

    /**
     * Test the property 'accessKey'
     */
    @Test
    public void accessKeyTest() {
        // TODO: test accessKey
    }

    /**
     * Test the property 'region'
     */
    @Test
    public void regionTest() {
        // TODO: test region
    }

    /**
     * Test the property 'objectKeyPrefix'
     */
    @Test
    public void objectKeyPrefixTest() {
        // TODO: test objectKeyPrefix
    }

    /**
     * Test the property 'bucketName'
     */
    @Test
    public void bucketNameTest() {
        // TODO: test bucketName
    }

    /**
     * Test the property 'contentType'
     */
    @Test
    public void contentTypeTest() {
        // TODO: test contentType
    }

    /**
     * Test the property 'hostUrl'
     */
    @Test
    public void hostUrlTest() {
        // TODO: test hostUrl
    }

    /**
     * Test the property 'secretKey'
     */
    @Test
    public void secretKeyTest() {
        // TODO: test secretKey
    }

    /**
     * Test the property 'datasetId'
     */
    @Test
    public void datasetIdTest() {
        // TODO: test datasetId
    }

    /**
     * Test the property 'projectId'
     */
    @Test
    public void projectIdTest() {
        // TODO: test projectId
    }

    /**
     * Test the property 'tableId'
     */
    @Test
    public void tableIdTest() {
        // TODO: test tableId
    }

    /**
     * Test the property 'serviceAccountKey'
     */
    @Test
    public void serviceAccountKeyTest() {
        // TODO: test serviceAccountKey
    }

    /**
     * Test the property 'apiKey'
     */
    @Test
    public void apiKeyTest() {
        // TODO: test apiKey
    }

    /**
     * Test the property 'streamName'
     */
    @Test
    public void streamNameTest() {
        // TODO: test streamName
    }

    /**
     * Test the property 'logType'
     */
    @Test
    public void logTypeTest() {
        // TODO: test logType
    }

    /**
     * Test the property 'sharedKey'
     */
    @Test
    public void sharedKeyTest() {
        // TODO: test sharedKey
    }

    /**
     * Test the property 'timeGeneratedField'
     */
    @Test
    public void timeGeneratedFieldTest() {
        // TODO: test timeGeneratedField
    }

    /**
     * Test the property 'workspaceId'
     */
    @Test
    public void workspaceIdTest() {
        // TODO: test workspaceId
    }

    /**
     * Test the property 'storageAccount'
     */
    @Test
    public void storageAccountTest() {
        // TODO: test storageAccount
    }

    /**
     * Test the property 'containerName'
     */
    @Test
    public void containerNameTest() {
        // TODO: test containerName
    }

    /**
     * Test the property 'blobSasToken'
     */
    @Test
    public void blobSasTokenTest() {
        // TODO: test blobSasToken
    }

}
