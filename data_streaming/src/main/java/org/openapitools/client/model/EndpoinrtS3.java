/*
 * Data Streaming - OpenAPI
 * The Data Streaming API allows you to manage your existing data streamings and templates. Data Streaming allows you to feed your stream processing, SIEM, and big data platforms with the event logs from your applications on Azion in real time. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * EndpoinrtS3
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-22T12:30:18.138783Z[GMT]")
public class EndpoinrtS3 {
  public static final String SERIALIZED_NAME_ENDPOINT_TYPE = "endpoint_type";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_TYPE)
  private String endpointType;

  public static final String SERIALIZED_NAME_ACCESS_KEY = "access_key";
  @SerializedName(SERIALIZED_NAME_ACCESS_KEY)
  private String accessKey;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_OBJECT_KEY_PREFIX = "object_key_prefix";
  @SerializedName(SERIALIZED_NAME_OBJECT_KEY_PREFIX)
  private String objectKeyPrefix;

  public static final String SERIALIZED_NAME_BUCKET_NAME = "bucket_name";
  @SerializedName(SERIALIZED_NAME_BUCKET_NAME)
  private String bucketName;

  public static final String SERIALIZED_NAME_CONTENT_TYPE = "content_type";
  @SerializedName(SERIALIZED_NAME_CONTENT_TYPE)
  private String contentType;

  public static final String SERIALIZED_NAME_HOST_URL = "host_url";
  @SerializedName(SERIALIZED_NAME_HOST_URL)
  private URI hostUrl;

  public static final String SERIALIZED_NAME_SECRET_KEY = "secret_key";
  @SerializedName(SERIALIZED_NAME_SECRET_KEY)
  private String secretKey;

  public EndpoinrtS3() {
  }

  public EndpoinrtS3 endpointType(String endpointType) {
    
    this.endpointType = endpointType;
    return this;
  }

   /**
   * Get endpointType
   * @return endpointType
  **/
  @javax.annotation.Nullable
  public String getEndpointType() {
    return endpointType;
  }


  public void setEndpointType(String endpointType) {
    this.endpointType = endpointType;
  }


  public EndpoinrtS3 accessKey(String accessKey) {
    
    this.accessKey = accessKey;
    return this;
  }

   /**
   * Get accessKey
   * @return accessKey
  **/
  @javax.annotation.Nullable
  public String getAccessKey() {
    return accessKey;
  }


  public void setAccessKey(String accessKey) {
    this.accessKey = accessKey;
  }


  public EndpoinrtS3 region(String region) {
    
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }


  public void setRegion(String region) {
    this.region = region;
  }


  public EndpoinrtS3 objectKeyPrefix(String objectKeyPrefix) {
    
    this.objectKeyPrefix = objectKeyPrefix;
    return this;
  }

   /**
   * Get objectKeyPrefix
   * @return objectKeyPrefix
  **/
  @javax.annotation.Nullable
  public String getObjectKeyPrefix() {
    return objectKeyPrefix;
  }


  public void setObjectKeyPrefix(String objectKeyPrefix) {
    this.objectKeyPrefix = objectKeyPrefix;
  }


  public EndpoinrtS3 bucketName(String bucketName) {
    
    this.bucketName = bucketName;
    return this;
  }

   /**
   * Get bucketName
   * @return bucketName
  **/
  @javax.annotation.Nullable
  public String getBucketName() {
    return bucketName;
  }


  public void setBucketName(String bucketName) {
    this.bucketName = bucketName;
  }


  public EndpoinrtS3 contentType(String contentType) {
    
    this.contentType = contentType;
    return this;
  }

   /**
   * Get contentType
   * @return contentType
  **/
  @javax.annotation.Nullable
  public String getContentType() {
    return contentType;
  }


  public void setContentType(String contentType) {
    this.contentType = contentType;
  }


  public EndpoinrtS3 hostUrl(URI hostUrl) {
    
    this.hostUrl = hostUrl;
    return this;
  }

   /**
   * Get hostUrl
   * @return hostUrl
  **/
  @javax.annotation.Nullable
  public URI getHostUrl() {
    return hostUrl;
  }


  public void setHostUrl(URI hostUrl) {
    this.hostUrl = hostUrl;
  }


  public EndpoinrtS3 secretKey(String secretKey) {
    
    this.secretKey = secretKey;
    return this;
  }

   /**
   * Get secretKey
   * @return secretKey
  **/
  @javax.annotation.Nullable
  public String getSecretKey() {
    return secretKey;
  }


  public void setSecretKey(String secretKey) {
    this.secretKey = secretKey;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EndpoinrtS3 endpoinrtS3 = (EndpoinrtS3) o;
    return Objects.equals(this.endpointType, endpoinrtS3.endpointType) &&
        Objects.equals(this.accessKey, endpoinrtS3.accessKey) &&
        Objects.equals(this.region, endpoinrtS3.region) &&
        Objects.equals(this.objectKeyPrefix, endpoinrtS3.objectKeyPrefix) &&
        Objects.equals(this.bucketName, endpoinrtS3.bucketName) &&
        Objects.equals(this.contentType, endpoinrtS3.contentType) &&
        Objects.equals(this.hostUrl, endpoinrtS3.hostUrl) &&
        Objects.equals(this.secretKey, endpoinrtS3.secretKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endpointType, accessKey, region, objectKeyPrefix, bucketName, contentType, hostUrl, secretKey);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EndpoinrtS3 {\n");
    sb.append("    endpointType: ").append(toIndentedString(endpointType)).append("\n");
    sb.append("    accessKey: ").append(toIndentedString(accessKey)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    objectKeyPrefix: ").append(toIndentedString(objectKeyPrefix)).append("\n");
    sb.append("    bucketName: ").append(toIndentedString(bucketName)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    hostUrl: ").append(toIndentedString(hostUrl)).append("\n");
    sb.append("    secretKey: ").append(toIndentedString(secretKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("endpoint_type");
    openapiFields.add("access_key");
    openapiFields.add("region");
    openapiFields.add("object_key_prefix");
    openapiFields.add("bucket_name");
    openapiFields.add("content_type");
    openapiFields.add("host_url");
    openapiFields.add("secret_key");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EndpoinrtS3
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EndpoinrtS3.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EndpoinrtS3 is not found in the empty JSON string", EndpoinrtS3.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EndpoinrtS3.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EndpoinrtS3` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("endpoint_type") != null && !jsonObj.get("endpoint_type").isJsonNull()) && !jsonObj.get("endpoint_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint_type").toString()));
      }
      if ((jsonObj.get("access_key") != null && !jsonObj.get("access_key").isJsonNull()) && !jsonObj.get("access_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `access_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("access_key").toString()));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("object_key_prefix") != null && !jsonObj.get("object_key_prefix").isJsonNull()) && !jsonObj.get("object_key_prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `object_key_prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("object_key_prefix").toString()));
      }
      if ((jsonObj.get("bucket_name") != null && !jsonObj.get("bucket_name").isJsonNull()) && !jsonObj.get("bucket_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bucket_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bucket_name").toString()));
      }
      if ((jsonObj.get("content_type") != null && !jsonObj.get("content_type").isJsonNull()) && !jsonObj.get("content_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `content_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("content_type").toString()));
      }
      if ((jsonObj.get("host_url") != null && !jsonObj.get("host_url").isJsonNull()) && !jsonObj.get("host_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `host_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("host_url").toString()));
      }
      if ((jsonObj.get("secret_key") != null && !jsonObj.get("secret_key").isJsonNull()) && !jsonObj.get("secret_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secret_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secret_key").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EndpoinrtS3.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EndpoinrtS3' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EndpoinrtS3> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EndpoinrtS3.class));

       return (TypeAdapter<T>) new TypeAdapter<EndpoinrtS3>() {
           @Override
           public void write(JsonWriter out, EndpoinrtS3 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EndpoinrtS3 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EndpoinrtS3 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EndpoinrtS3
  * @throws IOException if the JSON string is invalid with respect to EndpoinrtS3
  */
  public static EndpoinrtS3 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EndpoinrtS3.class);
  }

 /**
  * Convert an instance of EndpoinrtS3 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

