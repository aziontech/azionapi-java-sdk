/*
 * Data Streaming - OpenAPI
 * The Data Streaming API allows you to manage your existing data streamings and templates. Data Streaming allows you to feed your stream processing, SIEM, and big data platforms with the event logs from your applications on Azion in real time. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * EndpointAzureBlobStorage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-01T19:02:16.279151Z[GMT]")
public class EndpointAzureBlobStorage {
  public static final String SERIALIZED_NAME_ENDPOINT_TYPE = "endpoint_type";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_TYPE)
  private String endpointType;

  public static final String SERIALIZED_NAME_STORAGE_ACCOUNT = "storage_account";
  @SerializedName(SERIALIZED_NAME_STORAGE_ACCOUNT)
  private String storageAccount;

  public static final String SERIALIZED_NAME_CONTAINER_NAME = "container_name";
  @SerializedName(SERIALIZED_NAME_CONTAINER_NAME)
  private String containerName;

  public static final String SERIALIZED_NAME_BLOB_SAS_TOKEN = "blob_sas_token";
  @SerializedName(SERIALIZED_NAME_BLOB_SAS_TOKEN)
  private String blobSasToken;

  public EndpointAzureBlobStorage() {
  }

  public EndpointAzureBlobStorage endpointType(String endpointType) {
    
    this.endpointType = endpointType;
    return this;
  }

   /**
   * Get endpointType
   * @return endpointType
  **/
  @javax.annotation.Nullable
  public String getEndpointType() {
    return endpointType;
  }


  public void setEndpointType(String endpointType) {
    this.endpointType = endpointType;
  }


  public EndpointAzureBlobStorage storageAccount(String storageAccount) {
    
    this.storageAccount = storageAccount;
    return this;
  }

   /**
   * Get storageAccount
   * @return storageAccount
  **/
  @javax.annotation.Nullable
  public String getStorageAccount() {
    return storageAccount;
  }


  public void setStorageAccount(String storageAccount) {
    this.storageAccount = storageAccount;
  }


  public EndpointAzureBlobStorage containerName(String containerName) {
    
    this.containerName = containerName;
    return this;
  }

   /**
   * Get containerName
   * @return containerName
  **/
  @javax.annotation.Nullable
  public String getContainerName() {
    return containerName;
  }


  public void setContainerName(String containerName) {
    this.containerName = containerName;
  }


  public EndpointAzureBlobStorage blobSasToken(String blobSasToken) {
    
    this.blobSasToken = blobSasToken;
    return this;
  }

   /**
   * Get blobSasToken
   * @return blobSasToken
  **/
  @javax.annotation.Nullable
  public String getBlobSasToken() {
    return blobSasToken;
  }


  public void setBlobSasToken(String blobSasToken) {
    this.blobSasToken = blobSasToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EndpointAzureBlobStorage endpointAzureBlobStorage = (EndpointAzureBlobStorage) o;
    return Objects.equals(this.endpointType, endpointAzureBlobStorage.endpointType) &&
        Objects.equals(this.storageAccount, endpointAzureBlobStorage.storageAccount) &&
        Objects.equals(this.containerName, endpointAzureBlobStorage.containerName) &&
        Objects.equals(this.blobSasToken, endpointAzureBlobStorage.blobSasToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endpointType, storageAccount, containerName, blobSasToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EndpointAzureBlobStorage {\n");
    sb.append("    endpointType: ").append(toIndentedString(endpointType)).append("\n");
    sb.append("    storageAccount: ").append(toIndentedString(storageAccount)).append("\n");
    sb.append("    containerName: ").append(toIndentedString(containerName)).append("\n");
    sb.append("    blobSasToken: ").append(toIndentedString(blobSasToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("endpoint_type");
    openapiFields.add("storage_account");
    openapiFields.add("container_name");
    openapiFields.add("blob_sas_token");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to EndpointAzureBlobStorage
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EndpointAzureBlobStorage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EndpointAzureBlobStorage is not found in the empty JSON string", EndpointAzureBlobStorage.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EndpointAzureBlobStorage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EndpointAzureBlobStorage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("endpoint_type") != null && !jsonObj.get("endpoint_type").isJsonNull()) && !jsonObj.get("endpoint_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint_type").toString()));
      }
      if ((jsonObj.get("storage_account") != null && !jsonObj.get("storage_account").isJsonNull()) && !jsonObj.get("storage_account").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `storage_account` to be a primitive type in the JSON string but got `%s`", jsonObj.get("storage_account").toString()));
      }
      if ((jsonObj.get("container_name") != null && !jsonObj.get("container_name").isJsonNull()) && !jsonObj.get("container_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `container_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("container_name").toString()));
      }
      if ((jsonObj.get("blob_sas_token") != null && !jsonObj.get("blob_sas_token").isJsonNull()) && !jsonObj.get("blob_sas_token").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `blob_sas_token` to be a primitive type in the JSON string but got `%s`", jsonObj.get("blob_sas_token").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EndpointAzureBlobStorage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EndpointAzureBlobStorage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EndpointAzureBlobStorage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EndpointAzureBlobStorage.class));

       return (TypeAdapter<T>) new TypeAdapter<EndpointAzureBlobStorage>() {
           @Override
           public void write(JsonWriter out, EndpointAzureBlobStorage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EndpointAzureBlobStorage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EndpointAzureBlobStorage given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EndpointAzureBlobStorage
  * @throws IOException if the JSON string is invalid with respect to EndpointAzureBlobStorage
  */
  public static EndpointAzureBlobStorage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EndpointAzureBlobStorage.class);
  }

 /**
  * Convert an instance of EndpointAzureBlobStorage to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

