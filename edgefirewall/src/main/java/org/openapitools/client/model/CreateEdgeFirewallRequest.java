/*
 * Edge Firewall API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateEdgeFirewallRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-25T11:47:14.763206Z[GMT]")
public class CreateEdgeFirewallRequest {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DOMAINS = "domains";
  @SerializedName(SERIALIZED_NAME_DOMAINS)
  private List<Long> domains;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "is_active";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive;

  public static final String SERIALIZED_NAME_EDGE_FUNCTIONS_ENABLED = "edge_functions_enabled";
  @SerializedName(SERIALIZED_NAME_EDGE_FUNCTIONS_ENABLED)
  private Boolean edgeFunctionsEnabled;

  public static final String SERIALIZED_NAME_NETWORK_PROTECTION_ENABLED = "network_protection_enabled";
  @SerializedName(SERIALIZED_NAME_NETWORK_PROTECTION_ENABLED)
  private Boolean networkProtectionEnabled;

  public static final String SERIALIZED_NAME_WAF_ENABLED = "waf_enabled";
  @SerializedName(SERIALIZED_NAME_WAF_ENABLED)
  private Boolean wafEnabled;

  public CreateEdgeFirewallRequest() {
  }

  public CreateEdgeFirewallRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CreateEdgeFirewallRequest domains(List<Long> domains) {
    
    this.domains = domains;
    return this;
  }

  public CreateEdgeFirewallRequest addDomainsItem(Long domainsItem) {
    if (this.domains == null) {
      this.domains = new ArrayList<>();
    }
    this.domains.add(domainsItem);
    return this;
  }

   /**
   * Get domains
   * @return domains
  **/
  @javax.annotation.Nullable
  public List<Long> getDomains() {
    return domains;
  }


  public void setDomains(List<Long> domains) {
    this.domains = domains;
  }


  public CreateEdgeFirewallRequest isActive(Boolean isActive) {
    
    this.isActive = isActive;
    return this;
  }

   /**
   * Get isActive
   * @return isActive
  **/
  @javax.annotation.Nullable
  public Boolean getIsActive() {
    return isActive;
  }


  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  public CreateEdgeFirewallRequest edgeFunctionsEnabled(Boolean edgeFunctionsEnabled) {
    
    this.edgeFunctionsEnabled = edgeFunctionsEnabled;
    return this;
  }

   /**
   * Get edgeFunctionsEnabled
   * @return edgeFunctionsEnabled
  **/
  @javax.annotation.Nullable
  public Boolean getEdgeFunctionsEnabled() {
    return edgeFunctionsEnabled;
  }


  public void setEdgeFunctionsEnabled(Boolean edgeFunctionsEnabled) {
    this.edgeFunctionsEnabled = edgeFunctionsEnabled;
  }


  public CreateEdgeFirewallRequest networkProtectionEnabled(Boolean networkProtectionEnabled) {
    
    this.networkProtectionEnabled = networkProtectionEnabled;
    return this;
  }

   /**
   * Get networkProtectionEnabled
   * @return networkProtectionEnabled
  **/
  @javax.annotation.Nullable
  public Boolean getNetworkProtectionEnabled() {
    return networkProtectionEnabled;
  }


  public void setNetworkProtectionEnabled(Boolean networkProtectionEnabled) {
    this.networkProtectionEnabled = networkProtectionEnabled;
  }


  public CreateEdgeFirewallRequest wafEnabled(Boolean wafEnabled) {
    
    this.wafEnabled = wafEnabled;
    return this;
  }

   /**
   * Get wafEnabled
   * @return wafEnabled
  **/
  @javax.annotation.Nullable
  public Boolean getWafEnabled() {
    return wafEnabled;
  }


  public void setWafEnabled(Boolean wafEnabled) {
    this.wafEnabled = wafEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateEdgeFirewallRequest createEdgeFirewallRequest = (CreateEdgeFirewallRequest) o;
    return Objects.equals(this.name, createEdgeFirewallRequest.name) &&
        Objects.equals(this.domains, createEdgeFirewallRequest.domains) &&
        Objects.equals(this.isActive, createEdgeFirewallRequest.isActive) &&
        Objects.equals(this.edgeFunctionsEnabled, createEdgeFirewallRequest.edgeFunctionsEnabled) &&
        Objects.equals(this.networkProtectionEnabled, createEdgeFirewallRequest.networkProtectionEnabled) &&
        Objects.equals(this.wafEnabled, createEdgeFirewallRequest.wafEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, domains, isActive, edgeFunctionsEnabled, networkProtectionEnabled, wafEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateEdgeFirewallRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    domains: ").append(toIndentedString(domains)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    edgeFunctionsEnabled: ").append(toIndentedString(edgeFunctionsEnabled)).append("\n");
    sb.append("    networkProtectionEnabled: ").append(toIndentedString(networkProtectionEnabled)).append("\n");
    sb.append("    wafEnabled: ").append(toIndentedString(wafEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("domains");
    openapiFields.add("is_active");
    openapiFields.add("edge_functions_enabled");
    openapiFields.add("network_protection_enabled");
    openapiFields.add("waf_enabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CreateEdgeFirewallRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CreateEdgeFirewallRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateEdgeFirewallRequest is not found in the empty JSON string", CreateEdgeFirewallRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CreateEdgeFirewallRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateEdgeFirewallRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("domains") != null && !jsonObj.get("domains").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `domains` to be an array in the JSON string but got `%s`", jsonObj.get("domains").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateEdgeFirewallRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateEdgeFirewallRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateEdgeFirewallRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateEdgeFirewallRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateEdgeFirewallRequest>() {
           @Override
           public void write(JsonWriter out, CreateEdgeFirewallRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateEdgeFirewallRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CreateEdgeFirewallRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CreateEdgeFirewallRequest
  * @throws IOException if the JSON string is invalid with respect to CreateEdgeFirewallRequest
  */
  public static CreateEdgeFirewallRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateEdgeFirewallRequest.class);
  }

 /**
  * Convert an instance of CreateEdgeFirewallRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

