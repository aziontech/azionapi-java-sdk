/*
 * Edge Firewall API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets Variables
 */
@JsonAdapter(Variables.Adapter.class)
public enum Variables {
  
  HEADER_ACCEPT("header_accept"),
  
  HEADER_ACCEPT_ENCODING("header_accept_encoding"),
  
  HEADER_ACCEPT_LANGUAGE("header_accept_language"),
  
  HEADER_COOKIE("header_cookie"),
  
  HEADER_ORIGIN("header_origin"),
  
  HEADER_REFERER("header_referer"),
  
  HEADER_USER_AGENT("header_user_agent"),
  
  HOST("host"),
  
  NETWORK("network"),
  
  REQUEST_ARGS("request_args"),
  
  REQUEST_METHOD("request_method"),
  
  REQUEST_URI("request_uri"),
  
  SCHEME("scheme"),
  
  CLIENT_CERTIFICATE_VALIDATION("client_certificate_validation");

  private String value;

  Variables(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static Variables fromValue(String value) {
    for (Variables b : Variables.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<Variables> {
    @Override
    public void write(final JsonWriter jsonWriter, final Variables enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public Variables read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return Variables.fromValue(value);
    }
  }
}

