/*
 * Variables
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Variable;
import org.openapitools.client.model.VariableCreate;
import org.openapitools.client.model.VariableGet;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VariablesApi
 */
@Disabled
public class VariablesApiTest {

    private final VariablesApi api = new VariablesApi();

    /**
     * OpenApi3 schema for this API. Format can be selected via content negotiation.  - YAML: application/vnd.oai.openapi - JSON: application/vnd.oai.openapi+json
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiSchemaRetrieveTest() throws ApiException {
        String format = null;
        String lang = null;
        Map<String, Object> response = api.apiSchemaRetrieve(format, lang);
        // TODO: test validations
    }

    /**
     * Create a new Variable. &lt;br&gt;&lt;ul&gt;&lt;li&gt;If the attribute \&quot;secret\&quot; is informed with value \&quot;true\&quot; in request payload the Variable value will be secret and no longer viewable after creation.&lt;/li&gt;&lt;li&gt;If the attribute \&quot;secret\&quot; is not informed the Variable value will be considered as not secret by default.&lt;/li&gt;&lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiVariablesCreateTest() throws ApiException {
        VariableCreate variableCreate = null;
        VariableGet response = api.apiVariablesCreate(variableCreate);
        // TODO: test validations
    }

    /**
     * Delete a Variable by it&#39;s UUID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiVariablesDestroyTest() throws ApiException {
        String uuid = null;
        api.apiVariablesDestroy(uuid);
        // TODO: test validations
    }

    /**
     * List all user&#39;s Variables.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiVariablesListTest() throws ApiException {
        List<Variable> response = api.apiVariablesList();
        // TODO: test validations
    }

    /**
     * Retrieve all data for a Variable by it&#39;s UUID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiVariablesRetrieveTest() throws ApiException {
        String uuid = null;
        Variable response = api.apiVariablesRetrieve(uuid);
        // TODO: test validations
    }

    /**
     * Update variable attributes by it&#39;s UUID. Keep the Variable UUID but overwrite all editable attributes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiVariablesUpdateTest() throws ApiException {
        String uuid = null;
        VariableCreate variableCreate = null;
        VariableGet response = api.apiVariablesUpdate(uuid, variableCreate);
        // TODO: test validations
    }

}
